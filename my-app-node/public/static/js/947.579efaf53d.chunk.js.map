{"version":3,"file":"static/js/947.579efaf53d.chunk.js","mappings":"mJAAA,I,WCA6L,ECyC7L,CACAA,KAAA,YACAC,IAAAA,GACA,OACAC,UAAA,GACAC,SAAA,GACAC,UAAA,GACAC,YAAA,GAEA,EACAC,QAAA,CAEAC,WAAAA,GAEA,KAAAC,MAAA,sBAAAC,OACA,EAEAC,aAAAA,CAAAC,GACA,MAAAC,EAAAD,EAAAE,OAAAC,MAAA,GACA,GAAAF,EAAA,CAMA,GAHA,KAAAJ,MAAA,sBAAAO,MAAA,KAGAH,EAAAI,MAAA,QACA,YAAAC,SAAAC,QAAA,gBAGA,KAAAC,OAAAP,EAVA,CAWA,EAEAQ,cAAAA,CAAAT,GACAA,EAAAU,kBACAV,EAAAW,iBACAX,EAAAY,aAAAC,WAAA,MACA,EACAC,UAAAA,CAAAd,GACAA,EAAAU,kBACAV,EAAAW,iBAIA,MAAAR,EAAAH,EAAAY,aAAAT,MACA,OAAAA,EAAAY,OACA,YAAAT,SAAAC,QAAA,cAGA,MAAAS,EAAAb,EAAA,GACA,SAAAc,QAAAD,GACA,YAAAV,SAAAY,MAAA,gBAEA,KAAAV,OAAAQ,GACAhB,EAAAU,kBACAV,EAAAW,gBACA,EAGAH,MAAAA,CAAAP,GACAA,GACAA,EAAAkB,cAAAC,MAAAC,IACA,MACAC,GADAC,EAAAA,EAAAA,IAAAF,GACAG,OAAAC,OACAC,EAAAC,EAAAA,GAAAA,cAAAL,GAGA,KAAA7B,UAAAiC,EACA,KAAAhC,YAAAkC,OAAAC,KAAAH,EAAA,MAEA,EAEAT,OAAAA,CAAAhB,GACA,0BAAA6B,KAAA7B,EAAAZ,KACA,IC/FA,GAXgB,E,SAAA,GACd,GHTW,WAAkB,IAAI0C,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,QAAQ,CAACG,IAAI,qBAAqBD,YAAY,qBAAqBE,MAAM,CAAC,KAAO,OAAO,OAAS,eAAeC,GAAG,CAAC,OAASP,EAAIhC,iBAAiBgC,EAAIQ,GAAG,KAAKN,EAAG,MAAM,CAACE,YAAY,OAAOG,GAAG,CAAC,KAAOP,EAAIjB,WAAW,SAAWiB,EAAItB,eAAe,UAAYsB,EAAItB,eAAe,UAAYsB,EAAItB,iBAAiB,CAACsB,EAAIQ,GAAG,6BAA6BN,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,UAAU,KAAO,QAAQC,GAAG,CAAC,MAAQP,EAAInC,cAAc,CAACmC,EAAIQ,GAAG,WAAW,KAAKR,EAAIQ,GAAG,KAAKN,EAAG,MAAM,CAACG,IAAI,QAAQD,YAAY,SAAS,CAACF,EAAG,WAAW,CAACO,YAAY,CAAC,MAAQ,QAAQH,MAAM,CAAC,KAAON,EAAItC,YAAYsC,EAAIU,GAAIV,EAAIrC,aAAa,SAASgD,GAAM,OAAOT,EAAG,kBAAkB,CAACU,IAAID,EAAKL,MAAM,CAAC,KAAOK,EAAK,MAAQA,IAAO,IAAG,IAAI,IAC7yB,GACsB,IGUpB,EACA,KACA,WACA,MAI8B,O","sources":["webpack://my-app/./src/views/ExcelUpload.vue","webpack://my-app/./src/views/ExcelUpload.vue?ea73","webpack://my-app/src/views/ExcelUpload.vue","webpack://my-app/./src/views/ExcelUpload.vue?32e9"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"file\"},[_c('input',{ref:\"excel-upload-input\",staticClass:\"excel-upload-input\",attrs:{\"type\":\"file\",\"accept\":\".xlsx, .xls\"},on:{\"change\":_vm.handleAddFile}}),_vm._v(\" \"),_c('div',{staticClass:\"drop\",on:{\"drop\":_vm.handleDrop,\"dragover\":_vm.handleDragover,\"dragenter\":_vm.handleDragover,\"dragleave\":_vm.handleDragover}},[_vm._v(\"\\n      将文件拖到此处 或\\n      \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.handleClick}},[_vm._v(\"点击上传\")])],1)]),_vm._v(\" \"),_c('div',{ref:\"table\",staticClass:\"table\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},_vm._l((_vm.tableHeader),function(item){return _c('el-table-column',{key:item,attrs:{\"prop\":item,\"label\":item}})}),1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-7!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelUpload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-7!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ExcelUpload.vue?vue&type=script&lang=js&\"","<template>\r\n  <div>\r\n    <!-- 区域1:上传文件 -->\r\n    <div class=\"file\">\r\n      <input\r\n        type=\"file\"\r\n        accept=\".xlsx, .xls\"\r\n        ref=\"excel-upload-input\"\r\n        class=\"excel-upload-input\"\r\n        @change=\"handleAddFile\"\r\n      />\r\n      <div\r\n        class=\"drop\"\r\n        @drop=\"handleDrop\"\r\n        @dragover=\"handleDragover\"\r\n        @dragenter=\"handleDragover\"\r\n        @dragleave=\"handleDragover\"\r\n      >\r\n        将文件拖到此处 或\r\n        <el-button type=\"primary\" size=\"mini\" @click=\"handleClick\"\r\n          >点击上传</el-button\r\n        >\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 区域2:展示表格 -->\r\n    <div ref=\"table\" class=\"table\">\r\n      <el-table :data=\"tableData\" style=\"width: 100%\">\r\n        <el-table-column\r\n          v-for=\"item of tableHeader\"\r\n          :key=\"item\"\r\n          :prop=\"item\"\r\n          :label=\"item\"\r\n        />\r\n      </el-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { read, writeFile, utils } from \"xlsx\";\r\nexport default {\r\n  name: \"ExcelFile\",\r\n  data() {\r\n    return {\r\n      excelhtml: \"\",\r\n      excelSrc: \"\",\r\n      tableData: [],\r\n      tableHeader: [],\r\n    };\r\n  },\r\n  methods: {\r\n    // 点击上传文件按钮\r\n    handleClick() {\r\n      // 编程式触发input的点击事件\r\n      this.$refs[\"excel-upload-input\"].click();\r\n    },\r\n    // 用户点击添加文件\r\n    handleAddFile(e) {\r\n      const file = e.target.files[0];\r\n      if (!file) return;\r\n\r\n      // 注意:上传重复文件不触发chage事件,因此再得到file对象后,需要将input对象的value清空\r\n      this.$refs[\"excel-upload-input\"].value = null;\r\n\r\n      // 文件大于1M,则取消上传\r\n      if (file.size >= 1024 * 1024) {\r\n        return this.$message.warning(\"请勿上传大于1M的文件!\");\r\n      }\r\n      // 上传文件\r\n      this.upload(file);\r\n    },\r\n    // 取消除了drop外其他拖拽事件的默认行为\r\n    handleDragover(e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n      e.dataTransfer.dropEffect = \"copy\";\r\n    },\r\n    handleDrop(e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n\r\n      // if(this.loading) return this.$message.warning('请等待当前excel解析完毕!')\r\n      // dataTransfer对象获得有关拖拽的内容信息\r\n      const files = e.dataTransfer.files;\r\n      if (files.length !== 1) {\r\n        return this.$message.warning(\"仅支持上传一个文件!\");\r\n      }\r\n\r\n      const rawFile = files[0];\r\n      if (!this.isExcel(rawFile)) {\r\n        return this.$message.error(\"仅支持excel类型文件\");\r\n      }\r\n      this.upload(rawFile);\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    },\r\n\r\n    // 解析文件为json或html\r\n    upload(file) {\r\n      if (!file) return;\r\n      file.arrayBuffer().then((res) => {\r\n        const workbook = read(res);\r\n        const sheet1 = workbook.Sheets.Sheet1;\r\n        const _data = utils.sheet_to_json(sheet1);\r\n        // const _html = utils.sheet_to_html(sheet1); // 转换成直接在Html中显示的表格\r\n        // 获得表头;使用el-table时会使用到\r\n        this.tableData = _data;\r\n        this.tableHeader = Object.keys(_data[0]);\r\n      });\r\n    },\r\n    // 判断文件是否为excel类型\r\n    isExcel(file) {\r\n      return /\\.(xlsx|xls|csv)$/.test(file.name);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped >\r\n.excel-upload-input {\r\n  display: none;\r\n  z-index: -999;\r\n}\r\n.drop {\r\n  border: 2px dashed #bbb;\r\n  width: 600px;\r\n  height: 160px;\r\n  line-height: 160px;\r\n  margin: 0 auto;\r\n  font-size: 15px;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  color: #bbb;\r\n  position: relative;\r\n}\r\n.table {\r\n  margin: 20px;\r\n}\r\n</style>","import { render, staticRenderFns } from \"./ExcelUpload.vue?vue&type=template&id=5d41b7d3&scoped=true&\"\nimport script from \"./ExcelUpload.vue?vue&type=script&lang=js&\"\nexport * from \"./ExcelUpload.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ExcelUpload.vue?vue&type=style&index=0&id=5d41b7d3&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5d41b7d3\",\n  null\n  \n)\n\nexport default component.exports"],"names":["name","data","excelhtml","excelSrc","tableData","tableHeader","methods","handleClick","$refs","click","handleAddFile","e","file","target","files","value","size","$message","warning","upload","handleDragover","stopPropagation","preventDefault","dataTransfer","dropEffect","handleDrop","length","rawFile","isExcel","error","arrayBuffer","then","res","sheet1","read","Sheets","Sheet1","_data","utils","Object","keys","test","_vm","this","_c","_self","staticClass","ref","attrs","on","_v","staticStyle","_l","item","key"],"sourceRoot":""}